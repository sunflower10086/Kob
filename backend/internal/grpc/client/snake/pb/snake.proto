syntax="proto3";

package game.pb;
option go_package = ".;game_system";

service game_system {
  rpc StartGame(StartGameReq) returns(StartGameResp) {};
  // 他做两件事，
  // 1. 匹配成功之后，创建地图，把创建成功的地图返回来
  // 2. 传递下一步应该是什么
  rpc SetNextStep(stream SetNextStepReq) returns(stream SetNextStepResp) {};
}

message StartGameReq {
  int32 aId = 1;
  int32 aBotId = 2;
  int32 bId = 3;
  int32 bBotId = 4;
}

message StartGameResp {
  string message = 1;
}

message SetNextStepReq {
  string direction = 1;
  string PlayerId = 2;
}

message SetNextStepResp {
  string event = 1;
  int32 aDirection = 2;
  int32 bDirection = 3;
  GameMap gameMap = 4;
  string loser = 5;
}

message GameMap {
  int32 AId = 1;
  int32 ASx = 2;
  int32 ASy = 3;
  int32 BId = 4;
  int32 BSx = 5;
  int32 BSy = 6;
  repeated Edge GameMap = 7;
  User playerA = 8;
  User playerB = 9;
}

message Edge {
  repeated int32 edge = 1;
}

message User {
  string  photo = 1;
  string username = 2;
  int32 userID = 3;
}